<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xb.mall.dao.ProductMapper">

    <!--通过产品分类查询所有产品-->
  <select id="getProductInfoListByCategoryName" parameterType="String" resultType="xb.mall.bean.responseObj.ProductInfoReponse">
    select info.id as id,
           info.name as name,
           info.stock as stock,
           info.img_path as imgPath,
           info.price as price,
           info.description as description,
           category.category_name as categoryName,
           category.id as categoryId
    from product_info info,product_category category where info.category_id=category.id and category.category_name = #{categorytName,jdbcType=VARCHAR}
  </select>

    <select id="getAll" resultType="xb.mall.bean.responseObj.ProductInfoReponse">
        select info.id as id,
               info.name as name,
               info.stock as stock,
               info.img_path as imgPath,
               info.price as price,
               info.description as description,
               category.category_name as categoryName,
               category.id as categoryId
        from product_info info,product_category category where info.category_id=category.id
    </select>

    <!--通过产品集合查询所有产品-->
    <select id="getProductListByCollectionId" parameterType="String" resultType="xb.mall.bean.ProductInfo">
        select info.id as id,
               info.name as name,
               info.stock as stock,
               info.img_path as imgPath,
               info.price as price,
               info.description as description
        from product_info info
        where info.id
                in (select relation.product_id from product_collection_relation relation where relation.collection_id=#{collectionId})
    </select>

    <!--通过产品ID查询单个产品-->
    <select id="getProductInfoById" parameterType="String" resultType="xb.mall.bean.responseObj.ProductInfoReponse">
        select
        info.id as id,
        info.name as name,
        info.stock as stock,
        info.img_path as imgPath,
        info.price as price,
        info.description as description,
        category.category_name as categoryName,
        category.id as categoryId
        from product_info info,product_category category where info.category_id=category.id and info.id = #{productId,jdbcType=VARCHAR}

    </select>

    <!--添加产品集合-->
    <insert id="addProductCollectionRelationBatch" >
      insert into product_collection_relation (product_id,collection_id) values
        <foreach collection ="productIdList" item="productId" separator =",">
            (#{productId}, #{collectionId})
        </foreach >
    </insert>

    <delete id="deleteProductCollectionRelation">
        delete from product_collection_relation where product_id=#{productId} and collection_id=#{collectionId}
    </delete>
</mapper>